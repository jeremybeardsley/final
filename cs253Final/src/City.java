@SuppressWarnings("rawtypes")
public class City implements Comparable {
	private String Name;
	private int x, y, id;
	private int minDistance;
	City previous;

	// Creates new city using name, xy coords and ID
	// passed as arguments
	public City(String Name, int x, int y, int id) {
		this.Name = Name;
		this.x = x;
		this.y = y;
		this.id = id;
		minDistance = Integer.MAX_VALUE - 1000;
	}

	// Getters for private variables
	public String getName() {
		return Name;
	}

	public int getX() {
		return x;
	}

	public int getY() {
		return y;
	}

	public int getID() {
		return id;
	}

	public City getPrevious() {
		return previous;
	}

	// Setter and Getter for minDistance, to be used
	// in implementation of Dijkstra's algorithm
	public void setMinDistance(int m) {
		minDistance = m;
	}

	public int getMinDistance() {
		return minDistance;
	}

	// Setters for private variables
	public void setPrevious(City c) {
		previous = c;
	}

	//Autogenerated by IDE, needed for 
	//creation of priority Queue
	@Override
	public int compareTo(Object arg0) {
		// TODO Auto-generated method stub
		return 0;
	}
}